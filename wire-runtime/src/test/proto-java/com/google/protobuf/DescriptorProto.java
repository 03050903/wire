// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: google/protobuf/descriptor.proto at 79:1
package com.google.protobuf;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * Describes a message type.
 */
public final class DescriptorProto extends Message<DescriptorProto, DescriptorProto.Builder> {
  public static final ProtoAdapter<DescriptorProto> ADAPTER = new ProtoAdapter<DescriptorProto>(FieldEncoding.LENGTH_DELIMITED, DescriptorProto.class) {
    @Override
    public int encodedSize(DescriptorProto value) {
      return (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.name) : 0)
          + (value.doc != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.doc) : 0)
          + FieldDescriptorProto.ADAPTER.asRepeated().encodedSizeWithTag(2, value.field)
          + FieldDescriptorProto.ADAPTER.asRepeated().encodedSizeWithTag(6, value.extension)
          + DescriptorProto.ADAPTER.asRepeated().encodedSizeWithTag(3, value.nested_type)
          + EnumDescriptorProto.ADAPTER.asRepeated().encodedSizeWithTag(4, value.enum_type)
          + ExtensionRange.ADAPTER.asRepeated().encodedSizeWithTag(5, value.extension_range)
          + (value.options != null ? MessageOptions.ADAPTER.encodedSizeWithTag(7, value.options) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, DescriptorProto value) throws IOException {
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name);
      if (value.doc != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.doc);
      if (value.field != null) FieldDescriptorProto.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.field);
      if (value.extension != null) FieldDescriptorProto.ADAPTER.asRepeated().encodeWithTag(writer, 6, value.extension);
      if (value.nested_type != null) DescriptorProto.ADAPTER.asRepeated().encodeWithTag(writer, 3, value.nested_type);
      if (value.enum_type != null) EnumDescriptorProto.ADAPTER.asRepeated().encodeWithTag(writer, 4, value.enum_type);
      if (value.extension_range != null) ExtensionRange.ADAPTER.asRepeated().encodeWithTag(writer, 5, value.extension_range);
      if (value.options != null) MessageOptions.ADAPTER.encodeWithTag(writer, 7, value.options);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public DescriptorProto decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.doc(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.field.add(FieldDescriptorProto.ADAPTER.decode(reader)); break;
          case 6: builder.extension.add(FieldDescriptorProto.ADAPTER.decode(reader)); break;
          case 3: builder.nested_type.add(DescriptorProto.ADAPTER.decode(reader)); break;
          case 4: builder.enum_type.add(EnumDescriptorProto.ADAPTER.decode(reader)); break;
          case 5: builder.extension_range.add(ExtensionRange.ADAPTER.decode(reader)); break;
          case 7: builder.options(MessageOptions.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public DescriptorProto redact(DescriptorProto value) {
      Builder builder = value.newBuilder();
      redactElements(builder.field, FieldDescriptorProto.ADAPTER);
      redactElements(builder.extension, FieldDescriptorProto.ADAPTER);
      redactElements(builder.nested_type, DescriptorProto.ADAPTER);
      redactElements(builder.enum_type, EnumDescriptorProto.ADAPTER);
      redactElements(builder.extension_range, ExtensionRange.ADAPTER);
      if (builder.options != null) builder.options = MessageOptions.ADAPTER.redact(builder.options);
      builder.clearUnknownFields();
      return builder.build();
    }
  };

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_NAME = "";

  public static final String DEFAULT_DOC = "";

  public final String name;

  /**
   * Doc string for generated code.
   */
  public final String doc;

  public final List<FieldDescriptorProto> field;

  public final List<FieldDescriptorProto> extension;

  public final List<DescriptorProto> nested_type;

  public final List<EnumDescriptorProto> enum_type;

  public final List<ExtensionRange> extension_range;

  public final MessageOptions options;

  public DescriptorProto(String name, String doc, List<FieldDescriptorProto> field, List<FieldDescriptorProto> extension, List<DescriptorProto> nested_type, List<EnumDescriptorProto> enum_type, List<ExtensionRange> extension_range, MessageOptions options) {
    this(name, doc, field, extension, nested_type, enum_type, extension_range, options, ByteString.EMPTY);
  }

  public DescriptorProto(String name, String doc, List<FieldDescriptorProto> field, List<FieldDescriptorProto> extension, List<DescriptorProto> nested_type, List<EnumDescriptorProto> enum_type, List<ExtensionRange> extension_range, MessageOptions options, ByteString unknownFields) {
    super(unknownFields);
    this.name = name;
    this.doc = doc;
    this.field = immutableCopyOf("field", field);
    this.extension = immutableCopyOf("extension", extension);
    this.nested_type = immutableCopyOf("nested_type", nested_type);
    this.enum_type = immutableCopyOf("enum_type", enum_type);
    this.extension_range = immutableCopyOf("extension_range", extension_range);
    this.options = options;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.name = name;
    builder.doc = doc;
    builder.field = copyOf("field", field);
    builder.extension = copyOf("extension", extension);
    builder.nested_type = copyOf("nested_type", nested_type);
    builder.enum_type = copyOf("enum_type", enum_type);
    builder.extension_range = copyOf("extension_range", extension_range);
    builder.options = options;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof DescriptorProto)) return false;
    DescriptorProto o = (DescriptorProto) other;
    return equals(unknownFields(), o.unknownFields())
        && equals(name, o.name)
        && equals(doc, o.doc)
        && equals(field, o.field)
        && equals(extension, o.extension)
        && equals(nested_type, o.nested_type)
        && equals(enum_type, o.enum_type)
        && equals(extension_range, o.extension_range)
        && equals(options, o.options);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (doc != null ? doc.hashCode() : 0);
      result = result * 37 + (field != null ? field.hashCode() : 1);
      result = result * 37 + (extension != null ? extension.hashCode() : 1);
      result = result * 37 + (nested_type != null ? nested_type.hashCode() : 1);
      result = result * 37 + (enum_type != null ? enum_type.hashCode() : 1);
      result = result * 37 + (extension_range != null ? extension_range.hashCode() : 1);
      result = result * 37 + (options != null ? options.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (name != null) builder.append(", name=").append(name);
    if (doc != null) builder.append(", doc=").append(doc);
    if (field != null) builder.append(", field=").append(field);
    if (extension != null) builder.append(", extension=").append(extension);
    if (nested_type != null) builder.append(", nested_type=").append(nested_type);
    if (enum_type != null) builder.append(", enum_type=").append(enum_type);
    if (extension_range != null) builder.append(", extension_range=").append(extension_range);
    if (options != null) builder.append(", options=").append(options);
    return builder.replace(0, 2, "DescriptorProto{").append('}').toString();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<DescriptorProto, Builder> {
    public String name;

    public String doc;

    public List<FieldDescriptorProto> field;

    public List<FieldDescriptorProto> extension;

    public List<DescriptorProto> nested_type;

    public List<EnumDescriptorProto> enum_type;

    public List<ExtensionRange> extension_range;

    public MessageOptions options;

    public Builder() {
      field = newMutableList();
      extension = newMutableList();
      nested_type = newMutableList();
      enum_type = newMutableList();
      extension_range = newMutableList();
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    /**
     * Doc string for generated code.
     */
    public Builder doc(String doc) {
      this.doc = doc;
      return this;
    }

    public Builder field(List<FieldDescriptorProto> field) {
      checkElementsNotNull(field);
      this.field = field;
      return this;
    }

    public Builder extension(List<FieldDescriptorProto> extension) {
      checkElementsNotNull(extension);
      this.extension = extension;
      return this;
    }

    public Builder nested_type(List<DescriptorProto> nested_type) {
      checkElementsNotNull(nested_type);
      this.nested_type = nested_type;
      return this;
    }

    public Builder enum_type(List<EnumDescriptorProto> enum_type) {
      checkElementsNotNull(enum_type);
      this.enum_type = enum_type;
      return this;
    }

    public Builder extension_range(List<ExtensionRange> extension_range) {
      checkElementsNotNull(extension_range);
      this.extension_range = extension_range;
      return this;
    }

    public Builder options(MessageOptions options) {
      this.options = options;
      return this;
    }

    @Override
    public DescriptorProto build() {
      return new DescriptorProto(name, doc, field, extension, nested_type, enum_type, extension_range, options, buildUnknownFields());
    }
  }

  public static final class ExtensionRange extends Message<ExtensionRange, ExtensionRange.Builder> {
    public static final ProtoAdapter<ExtensionRange> ADAPTER = new ProtoAdapter<ExtensionRange>(FieldEncoding.LENGTH_DELIMITED, ExtensionRange.class) {
      @Override
      public int encodedSize(ExtensionRange value) {
        return (value.start != null ? ProtoAdapter.INT32.encodedSizeWithTag(1, value.start) : 0)
            + (value.end != null ? ProtoAdapter.INT32.encodedSizeWithTag(2, value.end) : 0)
            + value.unknownFields().size();
      }

      @Override
      public void encode(ProtoWriter writer, ExtensionRange value) throws IOException {
        if (value.start != null) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.start);
        if (value.end != null) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.end);
        writer.writeBytes(value.unknownFields());
      }

      @Override
      public ExtensionRange decode(ProtoReader reader) throws IOException {
        ExtensionRange.Builder builder = new ExtensionRange.Builder();
        long token = reader.beginMessage();
        for (int tag; (tag = reader.nextTag()) != -1;) {
          switch (tag) {
            case 1: builder.start(ProtoAdapter.INT32.decode(reader)); break;
            case 2: builder.end(ProtoAdapter.INT32.decode(reader)); break;
            default: {
              FieldEncoding fieldEncoding = reader.peekFieldEncoding();
              Object value = fieldEncoding.rawProtoAdapter().decode(reader);
              builder.addUnknownField(tag, fieldEncoding, value);
            }
          }
        }
        reader.endMessage(token);
        return builder.build();
      }

      @Override
      public ExtensionRange redact(ExtensionRange value) {
        ExtensionRange.Builder builder = value.newBuilder();
        builder.clearUnknownFields();
        return builder.build();
      }
    };

    private static final long serialVersionUID = 0L;

    public static final Integer DEFAULT_START = 0;

    public static final Integer DEFAULT_END = 0;

    public final Integer start;

    public final Integer end;

    public ExtensionRange(Integer start, Integer end) {
      this(start, end, ByteString.EMPTY);
    }

    public ExtensionRange(Integer start, Integer end, ByteString unknownFields) {
      super(unknownFields);
      this.start = start;
      this.end = end;
    }

    @Override
    public ExtensionRange.Builder newBuilder() {
      ExtensionRange.Builder builder = new ExtensionRange.Builder();
      builder.start = start;
      builder.end = end;
      builder.addUnknownFields(unknownFields());
      return builder;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof ExtensionRange)) return false;
      ExtensionRange o = (ExtensionRange) other;
      return equals(unknownFields(), o.unknownFields())
          && equals(start, o.start)
          && equals(end, o.end);
    }

    @Override
    public int hashCode() {
      int result = super.hashCode;
      if (result == 0) {
        result = unknownFields().hashCode();
        result = result * 37 + (start != null ? start.hashCode() : 0);
        result = result * 37 + (end != null ? end.hashCode() : 0);
        super.hashCode = result;
      }
      return result;
    }

    @Override
    public String toString() {
      StringBuilder builder = new StringBuilder();
      if (start != null) builder.append(", start=").append(start);
      if (end != null) builder.append(", end=").append(end);
      return builder.replace(0, 2, "ExtensionRange{").append('}').toString();
    }

    public static final class Builder extends com.squareup.wire.Message.Builder<ExtensionRange, ExtensionRange.Builder> {
      public Integer start;

      public Integer end;

      public Builder() {
      }

      public Builder start(Integer start) {
        this.start = start;
        return this;
      }

      public Builder end(Integer end) {
        this.end = end;
        return this;
      }

      @Override
      public ExtensionRange build() {
        return new ExtensionRange(start, end, buildUnknownFields());
      }
    }
  }
}
