// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/child_pkg.proto at 22:1
package com.squareup.wire.protos;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireField;
import com.squareup.wire.protos.foreign.ForeignEnum;
import java.lang.Object;
import java.lang.Override;
import okio.ByteString;

public final class ChildPackage extends Message<ChildPackage> {
  public static final ProtoAdapter<ChildPackage> ADAPTER = ProtoAdapter.newMessageAdapter(ChildPackage.class);

  private static final long serialVersionUID = 0L;

  public static final ForeignEnum DEFAULT_INNER_FOREIGN_ENUM = ForeignEnum.BAV;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.protos.foreign.ForeignEnum#ADAPTER"
  )
  public final ForeignEnum inner_foreign_enum;

  public ChildPackage(ForeignEnum inner_foreign_enum) {
    this(inner_foreign_enum, ByteString.EMPTY);
  }

  public ChildPackage(ForeignEnum inner_foreign_enum, ByteString unknownFields) {
    super(unknownFields);
    this.inner_foreign_enum = inner_foreign_enum;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.inner_foreign_enum = inner_foreign_enum;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ChildPackage)) return false;
    ChildPackage o = (ChildPackage) other;
    return equals(unknownFields(), o.unknownFields())
        && equals(inner_foreign_enum, o.inner_foreign_enum);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (inner_foreign_enum != null ? inner_foreign_enum.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<ChildPackage, Builder> {
    public ForeignEnum inner_foreign_enum;

    public Builder() {
    }

    public Builder inner_foreign_enum(ForeignEnum inner_foreign_enum) {
      this.inner_foreign_enum = inner_foreign_enum;
      return this;
    }

    @Override
    public ChildPackage build() {
      return new ChildPackage(inner_foreign_enum, buildUnknownFields());
    }
  }
}
