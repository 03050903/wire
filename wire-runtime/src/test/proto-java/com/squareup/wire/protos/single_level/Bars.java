// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/samebasename/single_level.proto at 24:1
package com.squareup.wire.protos.single_level;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireField;
import java.lang.Object;
import java.lang.Override;
import java.util.List;
import okio.ByteString;

public final class Bars extends Message<Bars, Bars.Builder> {
  public static final ProtoAdapter<Bars> ADAPTER = ProtoAdapter.newMessageAdapter(Bars.class);

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.protos.single_level.Bar#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Bar> bars;

  public Bars(List<Bar> bars) {
    this(bars, ByteString.EMPTY);
  }

  public Bars(List<Bar> bars, ByteString unknownFields) {
    super(unknownFields);
    this.bars = immutableCopyOf(bars);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.bars = copyOf(bars);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Bars)) return false;
    Bars o = (Bars) other;
    return equals(unknownFields(), o.unknownFields())
        && equals(bars, o.bars);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (bars != null ? bars.hashCode() : 1);
      super.hashCode = result;
    }
    return result;
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<Bars, Builder> {
    public List<Bar> bars;

    public Builder() {
      bars = newMutableList();
    }

    public Builder bars(List<Bar> bars) {
      checkElementsNotNull(bars);
      this.bars = bars;
      return this;
    }

    @Override
    public Bars build() {
      return new Bars(bars, buildUnknownFields());
    }
  }
}
